module(
    name = "rules_swift_tidy",
    version = "0.0.0",
)

bazel_dep(name = "platforms", version = "0.0.6")
bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name = "cgrindel_bazel_starlib", version = "0.16.0")
bazel_dep(
    name = "rules_swift",
    version = "1.8.0",
    repo_name = "build_bazel_rules_swift",
)

swift_tidy_tools = use_extension(
    "//swiftformat:extensions.bzl",
    "swift_tidy_tools",
)
use_repo(
    swift_tidy_tools,
    "swift_tidy_prebuilt_toolchains",
    "swiftformat_download_linux_x86_64",
    "swiftformat_download_macos_arm64",
    "swiftformat_download_macos_x86_64",
)

register_toolchains("@swift_tidy_prebuilt_toolchains//:all")

bazel_dep(
    name = "gazelle",
    version = "0.31.0",
    dev_dependency = True,
    repo_name = "bazel_gazelle",
)
bazel_dep(
    name = "bazel_skylib_gazelle_plugin",
    version = "1.4.2",
    dev_dependency = True,
)
bazel_dep(
    name = "rules_bazel_integration_test",
    version = "0.14.1",
    dev_dependency = True,
)

bazel_binaries = use_extension(
    "@rules_bazel_integration_test//:extensions.bzl",
    "bazel_binaries",
    dev_dependency = True,
)
bazel_binaries.download(version_file = "//:.bazelversion")
use_repo(bazel_binaries, "bazel_binaries")
